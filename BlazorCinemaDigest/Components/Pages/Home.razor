@page "/"
@rendermode InteractiveServer
@using BlazorCinemaDigest.ApiRequest
@using BlazorCinemaDigest.ApiRequest.Model
@code {
	private List<Movie> movies;
	private List<Genre> genres;
	[Inject] MovieApiService MovieApi { get; set; }
	[Inject] GenreApiService GenreApi { get; set; }
	private string searchText = ""; 
	private string selectedGenre ="";
	private int page = 1;
	private int pageSize = 12;
	private int pageCount;

	protected override async Task OnInitializedAsync()
	{
		await GetAllMovies(1, pageSize);
		await GetAllGenres();

		var all = await MovieApi.All();
		pageCount = all.Count / pageSize;
	}
	private async Task GetAllMovies(int page, int pageSize)
	{
		var all = await MovieApi.GetAllMovies(page, pageSize);
		movies = all;
		StateHasChanged();
	}
	private async Task ChangePage(int page)
	{
		var all = await MovieApi.GetAllMovies(page, pageSize);
		movies = all;
		StateHasChanged();
	}
	private async Task GetAllGenres(){
		var allgenres = await GenreApi.GetAllGenres();
		genres = allgenres;
	}
	private async Task HandleSearch()
	{
		var filteredMovies = await MovieApi.FilterMovies(searchText, selectedGenre, page, pageSize);
		movies = filteredMovies;
		StateHasChanged(); 
	}
}
<h2>Список фильмов</h2>
@if (genres != null)
{
	<div class=".search-filter-container" >
		<div class="search-form">
			<input type="text" @bind-value="searchText" @bind-value:event="oninput" placeholder="Поиск по названию..." />
			<button @onclick="HandleSearch">Поиск</button>
		</div>
		<div class="genre-dropdown">
			<select @bind="selectedGenre" @bind:event="onchange">
				<option value="">Все жанры</option>
				@foreach (var genre in genres)
				{
					<option value="@genre.name">@genre.name</option>
				}
			</select>
		</div>
	</div>
}
@if (movies != null)
{
	<div class="movies_wrapper" style="    display: flex;
    flex-wrap:wrap;
margin-top:30px;
    gap: 30px;">
		@foreach (var movie in movies)
		{
		<MovieCard movie="@movie"/>
		}
	</div>
}
else
{
	<div class="alert alert-success">Фильмы не найдены</div>
}
@if (pageCount > 0)
{
	<div style="display:flex;gap:10px;margin-top:50px;margin-bottom:50px;">
		@foreach (var i in Enumerable.Range(1, pageCount+1))
		{
			<button @onclick="async () => await ChangePage(i)">
				<div style="padding:10px 13px; margin:0px;">
					<div>@i</div>
				</div>
			</button>
		}
	</div>
}
<style>
	.search-filter-container {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 20px;
		margin-top: 20px;
	}
	/* Стиль для формы поиска */
	.search-form {
		display: flex;
		align-items: center;
	}
		.search-form input {
			padding: 10px 15px;
			border: 1px solid #ced4da;
			border-radius: 5px 0 0 5px; /* Закругленные углы слева */
			font-size: 14px;
			width: 250px;
			transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
		}
			.search-form input:focus {
				border-color: #0d6efd;
				box-shadow: 0 0 5px rgba(13, 110, 253, 0.25);
				outline: none;
			}
		.search-form button {
			padding: 10px 20px;
			background: linear-gradient(90deg, #0d6efd, #4f94fd); /* Градиентный фон */
			color: white;
			border: none;
			border-radius: 0 5px 5px 0; /* Закругленные углы справа */
			cursor: pointer;
			font-size: 14px;
			transition: background 0.3s ease;
		}
			.search-form button:hover {
				background: linear-gradient(90deg, #0b5ed7, #458cff); /* Изменение градиента при наведении */
			}
	/* Стиль для выпадающего списка жанров */
	.genre-dropdown {
		position: relative;
	}
		.genre-dropdown select {
			padding: 10px 15px;
			border: 1px solid #ced4da;
			border-radius: 5px;
			font-size: 14px;
			appearance: none; /* Убираем стандартную стрелку */
			background: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2224%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20fill%3D%22none%22%20stroke%3D%22%230d6efd%22%20stroke-width%3D%222%22%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%3E%3Cpath%20d%3D%22M6%209l6%206 6-6%22%2F%3E%3C%2Fsvg%3E') no-repeat right 10px center / 12px 12px;
			width: 200px;
			transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
		}
			.genre-dropdown select:focus {
				border-color: #0d6efd;
				box-shadow: 0 0 5px rgba(13, 110, 253, 0.25);
				outline: none;
			}
		/* Подсказка для пустого значения */
		.genre-dropdown option:first-child {
			color: #6c757d; /* Серый цвет для подсказки */
		}
	/* Общий стиль для всего компонента */
	.search-filter-container .search-form,
	.search-filter-container .genre-dropdown {
		margin-right: 15px;
	}
</style>